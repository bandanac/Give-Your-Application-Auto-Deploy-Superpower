# starter code circleCI
# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo world
  build_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd backend && npm i
      - run: cd backend && npm run lint
  build_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd frontend && npm i
      - run: cd frontend && npm run lint
  test_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: cd backend && yarn install
      - run:
          name: "JavaScript Linter"
          command: cd backend && yarn lint -- --format junit -o reports/junit/js-lint-results.xml
      - run:
          name: "JavaScript Test Suite"
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/js-test-results.xml
          command: cd backend && yarn test -- --ci --testResultsProcessor="jest-junit"
      - store_test_results:
          path: backend/reports/junit
      - store_artifacts:
          path: backend/reports/junit
  test_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: cd frontend && yarn install
      - run:
          name: "JavaScript Linter"
          command: cd frontend && yarn lint -- --format junit -o reports/junit/js-lint-results.xml
      - run:
          name: "JavaScript Test Suite"
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/js-test-results.xml
          command: cd frontend && yarn test -- --ci --testResultsProcessor="jest-junit"
      - store_test_results:
          path: backend/reports/junit
      - store_artifacts:
          path: backend/reports/junit
  analyze_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd backend && npm audit --audit-level=critical
  analyze_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd frontend && npm audit --audit-level=critical

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      # - print_hello
      # - print_world:
      #     requires:
      #       - print_hello
      # - build_backend:
      #     requires:
      #       - print_world
      # - build_frontend:
      #     requires:
      #       - build_backend
      # - test_backend
      # - test_frontend
      - analyze_backend
      - analyze_frontend
      - print_hello:
          requires:
            - analyze_backend
            - analyze_frontend

# version: 2.1

# jobs:
#   hello-world:
#     docker:
#       - image: amazon/aws-cli
#     steps:
#       - checkout
#       - run:
#           name: Say Hello
#           command: |
#             echo "Hello World"

# workflows:
#   default:
#     jobs:
#       - hello-world
